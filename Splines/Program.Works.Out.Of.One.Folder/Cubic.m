function res=Cubic(x,y,XX,YY,func)
g=inline(func);
% ¬ычисление коэффициентов кубического сплайна и его значений в заданных точках
% ¬ходные аргументы
%    x, y Ц узлы интерпол€ции
%    xx Ц значени€ аргумента, дл€ которых надо вычислить кубический сплайн
%  ¬ыходные аргументы  
%    yy Ц значени€ сплайна в xx
%    — Ц матрица коэффициентов кубических полиномов
%    — = [d(1)      c(1)       b(1)       a1
%            d(2)      c(2)       b(2)       a2 
%             ...
%            d(n-1)   c(n-1)   b(n-1)    a(n-1) ];

% находим число узлов интерпол€ции
tic
% n количество точек разбиени€ интерполируемого участка функции
n=length(x);
% задаем точку или(набор точек дл€ подальшей интерпол€ции)
xx = dlmread('X.txt');
%происходит сортировка узлов по возростанию 
xx = sort(xx); % в столбце I получаем номера по
% преобразуем массивы узлов из строки в столбец (транспонируем)
x = x';
y = y';

% находим коэффициенты полиномов, образующих сплайн
[d, c, b, a]  = CalcCoeffs(x, y);
% записываем найденные коэффициенты в матрицу
C = [d c b a];

% создаем нулевой вектор дл€ записи значений сплайна
yy = zeros(size(xx));
% вычисл€ем значени€ сплайна
% в цикле проходим по отрезкам между узлами интерполировани€
for k = 1:n-1
    % находим индексы элементов массива xx, значени€ которых 
    % лежат между узловыми точками x(k) и x(k+1)
    ind = find((xx >= x(k)) & (xx<= x(k+1)));
    % вычисл€ем значени€ соответствующего полинома
    yy(ind) = a(k) + b(k)*(xx(ind)-x(k)) + c(k)*(xx(ind)-x(k)).^2 + d(k)*(xx(ind)-x(k)).^3;
end
for i=1:length(yy)
    error(i)=power((yy(i)-g(xx(i))),2);
end
Er=sum(error)/length(error);
subplot(2, 2, 3);
hold on;
plot_1=plot(x,y,'yo',XX,YY,':g',xx,yy,'r');
set(plot_1,'LineWidth', 5 ); 
xlabel('X');
ylabel('Y');
title('√рафик є3');
leg=legend('”зловые точки','“очное значение',' уб. сплайн','Location','southeast');
dlmwrite('Y_Cubic.txt',yy);
grid on;
time=toc
res=[time Er]
end