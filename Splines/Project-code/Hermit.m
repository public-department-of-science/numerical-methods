function Hermit_sp()
tic
% n количество точек разбиени€ интерполируемого участка функции
x=[3.2 4.1 12.2 8.9 10.3 9.2 7.5 2.5]; 
%заданеи функции интерполировани€
y=x.^3+3.*(x.^0.5+3)
y1=3*x.^2+(3/2)*(sqrt(x));
% задаем точку или(набор точек дл€ подальшей интерпол€ции)
xx = dlmread('X.txt');
%происходит сортировка узлов по возростанию 
[x,I] = sort(x); % в столбце I получаем номера позиций
%дл€ перестановки вектора у 
y = y(I); % переставили узлы на нужные позиции
%на выходе получим значение(вектор значений)соотв. точкам хх 
%происходит сортировка узлов по возростанию 
xx = sort(xx); % в столбце I получаем номера позиций
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
col_point=round(length(xx)/(length(x)-1));
% определение числа узловых точек
n=length(x);
% нахождение всех коэффициентов a(k) и b(k)
a = y;
b = y1;
% вычисление разделенных разностей 
DivDif = diff(y)./diff(x);
% вычисление всех коэффициентов c(k) и d(k)
for k = 1:n-1
    c(k) = (3*DivDif(k) - 2*y1(k) - y1(k+1))/(x(k+1)-x(k));
    d(k) = (y1(k) - 2*DivDif(k) + y1(k+1))/(x(k+1)-x(k))^2;
end
% создание графического окна и осей
figure('Color','w')
axes
% вывод данных маркерами
plot(x,y,'--go')
hold on
% построение графиков каждого из полиномов
for k=1:n-1
    % вычисление k-го полинома в col_point точках между x(k) и x(k+1)
    xx=linspace(x(k),x(k+1),col_point);
    yy=a(k) + b(k)*(xx-x(k)) + c(k)*(xx-x(k)).^2 + d(k)*(xx-x(k)).^3;
    % построение графика k-го полинома
    plot(xx,yy,'r');
end
grid on;
toc