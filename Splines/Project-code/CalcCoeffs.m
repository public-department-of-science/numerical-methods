function [d, c, b, a]  = CalcCoeffs(x, y)
% подфункци€ дл€ вычислени€ коэффициентов полиномов кубического сплайна
% находим число узлов
n = length(x);
% вычисл€ем вектор рассто€ний между узлами
h = diff(x);
% вычисл€ем коэффициенты трехдиагональной матрицы
alpha = 1./h(2:n-2);
beta = 2* (1./h(1:n-2) + 1./h(2:n-1));
gamma = 1./h(2:n-2);

% формируем пр€моугольный массив с диагонал€ми, дополн€€ вектора 
% alpha и  gamma нул€ми
D3 = [[alpha; 0] beta [0; gamma]];
% формируем трехдиагональную матрицу в компактной форме
A = spdiags(D3, [-1 0 1], n-2, n-2);

% вычисл€ем правую часть системы
df = diff(y)./h;
delta = 3*(df(2:n-1)./h(2:n-1) + df(1:n-2)./h(1:n-2));

% решаем систему относительно тангенсов углов наклона сплайна в узлах
b = A\delta; %левое деление матриц

% расшир€ем полученный вектор, добавл€€ граничные услови€
b = [0; b; 0];
% находим остальные коэффициенты полиномов
a = y(1:n-1);
c = (3*df - b(2:n) - 2*b(1:n-1))./h;
d = (b(1:n-1) + b(2:n) - 2*df)./h.^2;
% удал€ем последний элемент вектора b, который содержит тангенс угла наклона в x(n),
% т.к. он не €вл€етс€ коэффициентом последнего полинома
b(end) = [];